// Generated by CoffeeScript 1.6.3
var __slice = [].slice;

(function($, window) {
  var SelectPlugin;
  SelectPlugin = (function() {
    SelectPlugin.prototype.defaults = {
      searchable: false,
      paramB: 'bar'
    };

    function SelectPlugin(el, options) {
      this.options = $.extend({}, this.defaults, options);
      this.$el = $(el);
      this.init();
    }

    SelectPlugin.prototype.init = function(echo) {
      var container, dropdown, parent, selectedLabel, selectedValue, self;
      self = this;
      this.$el.wrap('<div class="customSelectContainer"></div>');
      parent = this.$el.parent();
      this.$el.parent().append('<div class="customSelect"></div>');
      this.$el.parent().append('<div class="customSelectLabel"><label>aaa<label></div>');
      if (this.options.searchable) {
        this.$el.siblings('.customSelect').append('<div class="customSelectSearch"><input type="text"/></div>');
      }
      dropdown = parent.find('.customSelect');
      container = this.$el.siblings('.customSelect').append('<ul></ul>');
      selectedLabel = '';
      selectedValue = $(this.$el).val();
      this.$el.find('option').each(function(i, opt) {
        var txt, val;
        txt = opt.text;
        val = opt.value;
        container.find('ul').append("<li data-val='" + opt.value + "'>" + opt.text + "</li>");
        if (opt.value === selectedValue) {
          selectedLabel = opt.text;
        }
      });
      this.$el.siblings('.customSelectLabel').click(function(event) {
        $('.customSelectLabel').not(this).siblings('.customSelect').slideUp('slow');
        return dropdown.slideToggle('slow');
      });
      $(document).on('click', function(event) {
        var comp;
        comp = event.target;
        if ($(comp).closest('.customSelectContainer').length === 0) {
          dropdown.slideUp('slow');
          return true;
        } else {
          return true;
        }
      });
      this.$el.siblings('.customSelect').find('li').click(function(event) {
        selectedLabel = $(event.target).text();
        selectedValue = $(event.target).attr('data-val');
        $(self.$el).siblings('.customSelectLabel').find('label').text(selectedLabel);
        dropdown.slideUp('slow');
        $(self.$el).val(selectedValue);
        return $(self.$el).change(event);
      });
      this.$el.addClass('hidden');
      if (selectedLabel.trim().length === 0) {
        selectedLabel = this.$el.find('option:eq(0)').text;
      }
      this.$el.siblings('.customSelectLabel').find('label').text(selectedLabel);
      if (this.options.searchable) {
        parent.find('.customSelectSearch input').keyup(function(event) {
          var re, val;
          val = $(this).val();
          re = new RegExp(val, 'i');
          return parent.find('li').each(function(i, elem) {
            var txt;
            txt = $(elem).text();
            if (re.exec(txt) === null) {
              return $(elem).hide();
            } else {
              return $(elem).show();
            }
          });
        });
      }
    };

    return SelectPlugin;

  })();
  return $.fn.extend({
    customSelect: function() {
      var args, option;
      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return this.each(function() {
        var $this, data;
        $this = $(this);
        data = $this.data('selectPlugin');
        if (!data) {
          $this.data('selectPlugin', (data = new SelectPlugin(this, option)));
        }
        if (typeof option === 'string') {
          return data[option].apply(data, args);
        }
      });
    }
  });
})(window.jQuery, window);
